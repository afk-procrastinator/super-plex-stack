services:

# Frontend

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/plex:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped

  overseerr: # OPTIONAL
    image: sctx/overseerr:latest
    container_name: overseerr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055
      - URL_BASE=/overseerr
    volumes:
      - ${CONFIG_PATH}/overseerr:/app/config
    restart: unless-stopped

  tautulli: # OPTIONAL
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL_BASE=/tautulli
    volumes:
      - ${CONFIG_PATH}/tautulli:/config
    networks:
      - media-network
    ports:
      - 8181:8181
    restart: unless-stopped

  organizr: # OPTIONAL
    image: organizr/organizr
    container_name: organizr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/organizr:/config
    ports:
      - 9983:80
    restart: unless-stopped

  filebrowser: # OPTIONAL
    image: hurlenko/filebrowser:latest
    user: "1000:1000"
    container_name: filebrowser
    volumes:
      - ${CONFIG_PATH}/filebrowser:/config
      - ${DATA_PATH}:/data
    ports:
      - 8081:8081
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - FB_LOG_LEVEL=debug
      - FB_LOG_FILE=/config/filebrowser.log
    restart: always
    networks:
      - media-network

  dozzle: # OPTIONAL
    image: amir20/dozzle:latest
    container_name: dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped

# Networking
  nginx-proxy-manager: # OPTIONAL
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/npm/data:/data
      - ${CONFIG_PATH}/npm/letsencrypt:/etc/letsencrypt
    networks:
      - media-network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${CONFIG_PATH}/qbittorrent:/config
      - ${DATA_PATH}:/data
    network_mode: "service:gluetun"
    restart: unless-stopped

  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports: # Ports for all services that access the gluetun VPN
      - 8000:8000
      - 5055:5055
      - 7878:7878
      - 8989:8989
      - 9696:9696
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPN_USERNAME}+pmp
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES='United States'
      - VPN_PORT_FORWARDING=on
      - PORT_FORWARD_ONLY=on
    volumes:
      - ${CONFIG_PATH}/gluetun:/gluetun
    restart: unless-stopped
    networks:
      media-network:
        aliases: # Aliases for all services that access the gluetun VPN
          - overseerr
          - radarr
          - sonarr
          - prowlarr
          - qbittorrent
      vpn:
        aliases:
          - gluetun

# Media Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - URL_BASE=/radarr
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - URL_BASE=/sonarr
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL_BASE=/prowlarr
    volumes:
      - ${CONFIG_PATH}/prowlarr:/config
    restart: unless-stopped

  bazarr: # OPTIONAL
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/bazarr:/config
      - ${DATA_PATH}/movies:/movies
      - ${DATA_PATH}/tv:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

networks:
  media-network:
    driver: bridge
  vpn:
    driver: bridge
    internal: false  # Allow internet access