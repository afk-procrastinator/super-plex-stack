services:

# Frontend

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - ./config/plex:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055
      - URL_BASE=/overseerr
    volumes:
      - ./config/overseerr:/app/config
    restart: unless-stopped

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL_BASE=/tautulli
    volumes:
      - ./config/tautulli:/config
    networks:
      - media-network
    ports:
      - 8181:8181
    restart: unless-stopped

  organizr:
    image: organizr/organizr
    container_name: organizr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/organizr:/config
    ports:
      - 9983:80
    restart: unless-stopped

  filebrowser:
    image: hurlenko/filebrowser:latest
    user: "1000:1000"
    container_name: filebrowser
    volumes:
      - ./config/filebrowser:/config
      - ${DATA_ROOT}:/data
    ports:
      - 8081:8081
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - FB_LOG_LEVEL=debug
      - FB_LOG_FILE=/config/filebrowser.log
    restart: always
    networks:
      - media-network

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped

# Networking
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      - TZ=${TZ}
    volumes:
      - ./config/npm/data:/data
      - ./config/npm/letsencrypt:/etc/letsencrypt
    networks:
      - media-network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
      # Set explicit username/password
      - WEBUI_USERNAME=admin
      - WEBUI_PASSWORD=adminadmin123
    volumes:
      - ./config/qbittorrent:/config
      - ${DATA_ROOT}:/data
    network_mode: "service:gluetun"
    restart: unless-stopped

  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      # VPN HTTP control server
      - 8000:8000
      # Overseerr
      - 5055:5055
      # Radarr
      - 7878:7878
      # Sonarr
      - 8989:8989
      # Prowlarr
      - 9696:9696
      # qBittorrent
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
      # Readarr
      - 8787:8787
    environment:
      ###! These settings will vary with your VPN provider. Check the Gluetun documentation (https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers) for more information. !###
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPN_USERNAME}+pmp
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES='United States'
      - VPN_PORT_FORWARDING=on
      - PORT_FORWARD_ONLY=on
    volumes:
      - ./config/gluetun:/gluetun
    restart: unless-stopped
    networks:
      media-network:
        aliases:
          - overseerr
          - radarr
          - sonarr
          - prowlarr
          - qbittorrent
      vpn:
        aliases:
          - gluetun

# Media Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - URL_BASE=/radarr
    volumes:
      - ./config/radarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - URL_BASE=/sonarr
    volumes:
      - ./config/sonarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL_BASE=/prowlarr
    volumes:
      - ./config/prowlarr:/config
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/bazarr:/config
      - ${DATA_ROOT}/movies:/movies
      - ${DATA_ROOT}/tv:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  cleanuperr:
    image: ghcr.io/flmorg/cleanuperr:latest
    container_name: cleanuperr
    network_mode: "service:gluetun"
    environment:
      # General settings
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - LOGGING__LOGLEVEL=Information
      - LOGGING__ENHANCED=true
      
      # Download client settings
      - DOWNLOAD_CLIENT=qBittorrent
      - QBITTORRENT__URL=http://localhost:8080
      - QBITTORRENT__USERNAME=${QBITTORRENT_USERNAME}
      - QBITTORRENT__PASSWORD=${QBITTORRENT_PASSWORD}
      
      # Queue Cleaner settings
      - QUEUECLEANER__ENABLED=true
      - QUEUECLEANER__RUNSEQUENTIALLY=true
      - QUEUECLEANER__IMPORT_FAILED_MAX_STRIKES=3
      - QUEUECLEANER__STALLED_MAX_STRIKES=3
      - QUEUECLEANER__STALLED_RESET_STRIKES_ON_PROGRESS=true
      - QUEUECLEANER__SLOW_MAX_STRIKES=3
      - QUEUECLEANER__SLOW_RESET_STRIKES_ON_PROGRESS=true
      - QUEUECLEANER__SLOW_MIN_SPEED=1MB
      - QUEUECLEANER__SLOW_MAX_TIME=20
      - QUEUECLEANER__SLOW_IGNORE_ABOVE_SIZE=60GB
      
      # Content Blocker settings
      - CONTENTBLOCKER__ENABLED=true
      - CONTENTBLOCKER__IGNORE_PRIVATE=false
      - CONTENTBLOCKER__DELETE_PRIVATE=false
      
      # Download Cleaner settings
      - DOWNLOADCLEANER__ENABLED=true
      - DOWNLOADCLEANER__DELETE_PRIVATE=false
      - DOWNLOADCLEANER__CATEGORIES__0__NAME=tv-sonarr
      - DOWNLOADCLEANER__CATEGORIES__0__MAX_RATIO=1
      - DOWNLOADCLEANER__CATEGORIES__0__MIN_SEED_TIME=0
      - DOWNLOADCLEANER__CATEGORIES__0__MAX_SEED_TIME=240
      - DOWNLOADCLEANER__CATEGORIES__1__NAME=radarr
      - DOWNLOADCLEANER__CATEGORIES__1__MAX_RATIO=1
      - DOWNLOADCLEANER__CATEGORIES__1__MIN_SEED_TIME=0
      - DOWNLOADCLEANER__CATEGORIES__1__MAX_SEED_TIME=240
      
      # Sonarr settings
      - SONARR__ENABLED=true
      - SONARR__INSTANCES__0__URL=http://localhost:8989
      - SONARR__INSTANCES__0__APIKEY=${SONARR_API_KEY}
      - SONARR__BLOCK__TYPE=blacklist
      - SONARR__BLOCK__PATH=https://raw.githubusercontent.com/flmorg/cleanuperr/main/blacklist
      
      # Radarr settings
      - RADARR__ENABLED=true
      - RADARR__INSTANCES__0__URL=http://localhost:7878
      - RADARR__INSTANCES__0__APIKEY=${RADARR_API_KEY}
      - RADARR__BLOCK__TYPE=blacklist
      - RADARR__BLOCK__PATH=https://raw.githubusercontent.com/flmorg/cleanuperr/main/blacklist
      
      # Search settings
      - SEARCH_ENABLED=true
      - SEARCH_DELAY=30
      
      # Trigger settings
      - TRIGGERS__QUEUECLEANER=0 0/5 * * * ?
      - TRIGGERS__CONTENTBLOCKER=0 0/5 * * * ?
      - TRIGGERS__DOWNLOADCLEANER=0 0 * * * ?
    volumes:
      - ./config/cleanuperr:/config
      - ./config/cleanuperr/logs:/var/logs
      - ./config/cleanuperr/ignored.txt:/ignored.txt
    restart: unless-stopped

networks:
  media-network:
    driver: bridge
  vpn:
    driver: bridge
    internal: false  # Allow internet access